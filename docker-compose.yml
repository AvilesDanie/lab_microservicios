services:
  # Servicio de Autenticación
  db:
    image: mysql:9.0.1
    container_name: AutenticacionDB
    environment:
      MYSQL_ROOT_PASSWORD: 12345
      MYSQL_DATABASE: AutenticacionDB
    ports:
      - "3306:3306"
    networks:
      - app-network

  autenticacion:
    build:
      context: ./autenticacion
    container_name: MicroservicioAutenticacion
    environment:
      - DATABASE_URL=mysql+pymysql://root:12345@db:3306/AutenticacionDB
    ports:
      - "8000:8000"
    networks:
      - app-network
    depends_on:
      - db
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]

  # Servicio de Búsqueda
  busqueda:
    build:
      context: ./busqueda
    container_name: MicroservicioBusqueda
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=sqlite:///./busqueda/test.db
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    networks:
      - app-network



  # Servicio de CMS
  db_cms:
    image: nouchka/sqlite3
    container_name: CMSDB
    volumes:
      - ./cms_project/db:/data
    environment:
      - SQLITE_DATABASE=mydatabase.db
    networks:
      - app-network

  cms:
    build:
      context: ./cms_project
    container_name: MicroservicioCMS
    ports:
      - "8002:8000"
    networks:
      - app-network
    depends_on:
      - db_cms
    command: 
      python manage.py runserver 0.0.0.0:8000




  # Servicio de Gestión de Post
  gestion_post:
    build:
      context: ./gestion_post
    container_name: MicroservicioGestionPost
    ports:
      - "8003:8000"
    networks:
      - app-network
    environment:
      - DATABASE_URL=sqlite:///./gestion_post/test.db
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload



# Servicio de Gestión de Imagenes
  imagenes:
    build:
      context: ./imagenes
    container_name: MicroservicioImagenes
    ports:
      - "8004:8000"
    networks:
      - app-network
    environment:
      - DATABASE_URL=sqlite:///./imagenes/images.db
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload



# Servicio de Gestión de comentarios
  mysqldb:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=rootroot
      - MYSQL_DATABASE=dbmicroservicio
    ports:
      - "4040:3306"
    volumes:
      - ./comentarios/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
  
  comentarios:
    build:
      context: ./comentarios
    container_name: MicroservicioComentarios
    ports:
      - "7040:7040"
    networks:
      - app-network
    depends_on:
      - mysqldb
    links:
      - mysqldb


networks:
  app-network:
    driver: bridge
